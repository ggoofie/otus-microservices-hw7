{
	"info": {
		"_postman_id": "09c9970d-add7-4d5e-bcd4-f01b9794a91c",
		"name": "otus-microservices-hw7",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15945612"
	},
	"item": [
		{
			"name": "create account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test: create account\", function() {",
							"    pm.response.to.have.status(200);",
							"    var requestBody = JSON.parse(pm.request.body.raw);",
							"    pm.collectionVariables.set(\"username\", requestBody.username);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/account",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "refill account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test: refill account\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"amount\": 10.0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/account/refill",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account",
						"refill"
					]
				}
			},
			"response": []
		},
		{
			"name": "create affordable order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test: create affordable order\", function() {",
							"    pm.response.to.have.status(200);",
							"    var responseBody = pm.response.json();",
							"    pm.collectionVariables.set(\"order_id\", responseBody.id);",
							"    pm.expect(responseBody.status).to.eql(\"COMPLETED\"); ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"description\": \"First order\",\n    \"price\": 6.0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/order",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "check balance after affordable order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test: check balance after affordable order\", function() {",
							"    pm.response.to.have.status(200);",
							"    var balance = parseFloat(pm.response.text());",
							"    pm.expect(balance).to.eql(4.0); ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/account/balance/{{username}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account",
						"balance",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get notice for affordable order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test: get notice for affordable order\", function() {",
							"    pm.response.to.have.status(200);",
							"    var responseBody = pm.response.json();",
							"    pm.expect(responseBody.orderStatus).to.eql(\"COMPLETED\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/notification/{{order_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notification",
						"{{order_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create unavailable order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test: create unavailable order\", function() {",
							"    pm.response.to.have.status(406);",
							"    var orderId = parseInt(pm.collectionVariables.get(\"order_id\")) + 1;",
							"    pm.collectionVariables.set(\"order_id\", orderId);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"description\": \"Second order\",\n    \"price\": 8.0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/order",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "check balance after unavailable order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test: check balance after unavailable order\", function() {",
							"    pm.response.to.have.status(200);",
							"    var balance = parseFloat(pm.response.text());",
							"    pm.expect(balance).to.eql(4.0); ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/account/balance/{{username}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account",
						"balance",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get notice for unavailable order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test: get notice for unavailable order\", function() {",
							"    pm.response.to.have.status(200);",
							"    var responseBody = pm.response.json();",
							"    pm.expect(responseBody.orderStatus).to.eql(\"REJECTED\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/notification/{{order_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"notification",
						"{{order_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://arch.homework",
			"type": "string"
		},
		{
			"key": "username",
			"value": "farsiyanva",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "",
			"type": "string"
		}
	]
}